---
title: "Write Memory Stream"
execute:
  freeze: true
---

```{r, eval=ecodown::examples_not_run()}
#| include: false
options("pillar.width" = 60)
library(sparklyr) 
library(dplyr)
```

*R/stream_data.R*

## stream_write_memory

## Description
 Writes a Spark dataframe stream into a memory stream. 


## Usage
```r
 
stream_write_memory( 
  x, 
  name = random_string("sparklyr_tmp_"), 
  mode = c("append", "complete", "update"), 
  trigger = stream_trigger_interval(), 
  checkpoint = file.path("checkpoints", name, random_string("")), 
  options = list(), 
  partition_by = NULL, 
  ... 
) 
```

## Arguments
|Arguments|Description|
|---|---|
| x | A Spark DataFrame or dplyr operation |
| name | The name to assign to the newly generated stream. |
| mode | Specifies how data is written to a streaming sink. Valid values are `"append"`, `"complete"` or `"update"`. |
| trigger | The trigger for the stream query, defaults to micro-batches running every 5 seconds. See `stream_trigger_interval` and   `stream_trigger_continuous`. |
| checkpoint | The location where the system will write all the checkpoint information to guarantee end-to-end fault-tolerance. |
| options | A list of strings with additional options. |
| partition_by | Partitions the output by the given list of columns. |
| ... | Optional arguments; currently unused. |






## See Also
 Other Spark stream serialization:  `stream_write_csv()`, `stream_write_table()` 


```{r, eval=ecodown::examples_not_run()}
#| include: false
spark_disconnect_all()
```
