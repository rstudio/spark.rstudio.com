{
  "hash": "602833852dbeaec55d1d61d6bbdb4196",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Enforce Specific Structure for R Objects\"\nexecute:\n  freeze: true\n---\n\n\n\n*R/precondition.R*\n\n## ensure\n\n## Description\n These routines are useful when preparing to pass objects to a Spark routine, as it is often necessary to ensure certain parameters are scalar integers, or scalar doubles, and so on. \n\n\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| object | An `R` object. |\n| allow.na | Are `NA` values permitted for this object? |\n| allow.null | Are `NULL` values permitted for this object? |\n| default | If `object` is `NULL`, what value should be used in its place? If `default` is specified, `allow.null` is ignored (and assumed to be `TRUE`). |\n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}