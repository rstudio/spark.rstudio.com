{
  "hash": "8be08e5831f5aee087a41c042b9b716a",
  "result": {
    "markdown": "---\ntitle: \"Render Stream\"\nexecute:\n  freeze: true\n---\n\n\n\n\n*R/stream_view.R*\n\n## stream_render\n\n## Description\nCollects streaming statistics to render the stream as an 'htmlwidget'. \n\n\n## Usage\n```r\nstream_render(stream = NULL, collect = 10, stats = NULL, ...) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| stream | The stream to render |\n| collect | The interval in seconds to collect data before rendering the 'htmlwidget'. |\n| stats | Optional stream statistics collected using `stream_stats()`, when specified, `stream` should be omitted. |\n| ... | Additional optional arguments. |\n\n\n\n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sparklyr) \nsc <- spark_connect(master = \"local\") \ndir.create(\"iris-in\") \nwrite.csv(iris, \"iris-in/iris.csv\", row.names = FALSE) \nstream <- stream_read_csv(sc, \"iris-in/\") %>% \n  stream_write_csv(\"iris-out/\") \nstream_render(stream) \n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-a7b8d512106a97d90a40\" style=\"width:100%;height:464px;\" class=\"r2d3 html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a7b8d512106a97d90a40\">{\"x\":{\"data\":{\"sources\":[\"FileStreamSource[file:/Users/edgar/r_projects/spark.rstudio.com/packages/sparklyr/latest/reference/iris-in]\"],\"sinks\":[\"FileSink[iris-out/]\"],\"stats\":[{\"timestamp\":\"2022-08-31T16:31:08.896Z\",\"rps\":{\"in\":0,\"out\":0}},{\"timestamp\":\"2022-08-31T16:31:08.896Z\",\"rps\":{\"in\":0,\"out\":0}},{\"timestamp\":\"2022-08-31T16:31:08.896Z\",\"rps\":{\"in\":0,\"out\":0}},{\"timestamp\":\"2022-08-31T16:31:08.896Z\",\"rps\":{\"in\":0,\"out\":0}},{\"timestamp\":\"2022-08-31T16:31:08.896Z\",\"rps\":{\"in\":0,\"out\":0}},{\"timestamp\":\"2022-08-31T16:31:08.896Z\",\"rps\":{\"in\":0,\"out\":0}},{\"timestamp\":\"2022-08-31T16:31:08.896Z\",\"rps\":{\"in\":0,\"out\":0}},{\"timestamp\":\"2022-08-31T16:31:08.896Z\",\"rps\":{\"in\":0,\"out\":0}},{\"timestamp\":\"2022-08-31T16:31:08.896Z\",\"rps\":{\"in\":0,\"out\":0}},{\"timestamp\":\"2022-08-31T16:31:19.003Z\",\"rps\":{\"in\":0,\"out\":0}},{\"timestamp\":\"2022-08-31T16:31:19.003Z\",\"rps\":{\"in\":0,\"out\":0}}]},\"type\":\"list\",\"container\":\"div\",\"options\":[\"function (...) \",\".Internal(options(...))\"],\"script\":\"var d3Script = function(d3, r2d3, data, div, width, height, options, theme, console) {\\nthis.d3 = d3;\\n\\ndiv = d3.select(div.node());\\n/* R2D3 Source File:  /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/sparklyr/streams/stream.js */\\n// !preview r2d3 data=list(sources = list(\\\"FileStreamSource[file]\\\"), sinks = list(\\\"FileSink[file]\\\"), stats = list(list(rps = list(\\\"in\\\" = 3, out = 2)), list(rps = list(\\\"in\\\" = 5, out = 10)), list(rps = list(\\\"in\\\" = 10, out = 10)), list(rps = list(\\\"in\\\" = 10, out = 10)), list(rps = list(\\\"in\\\" = 10, out = 10)), list(rps = list(\\\"in\\\" = 10, out = 10)), list(rps = list(\\\"in\\\" = 10, out = 10)), list(rps = list(\\\"in\\\" = 10, out = 10)), list(rps = list(\\\"in\\\" = 10, out = 10)), list(rps = list(\\\"in\\\" = 10, out = 10)))), options = list(demo = FALSE), container = \\\"div\\\"\\n\\nfunction StreamStats() {\\n  var rpmIn = [0];\\n  var rpmOut = [0];\\n\\n  var maxIn = 10;\\n  var maxOut = 10;\\n\\n  var maxStats = 100;\\n\\n  this.add = function(rps) {\\n    if (maxIn < rps.in) maxIn = rps.in;\\n    if (maxOut < rps.out) maxOut = rps.out;\\n\\n    rpmIn.unshift(rps.in);\\n    rpmOut.unshift(rps.out);\\n\\n    rpmIn = rpmIn.slice(0, Math.min(rpmIn.length, maxStats - 1));\\n    rpmOut = rpmOut.slice(0, Math.min(rpmOut.length, maxStats - 1));\\n  };\\n\\n  this.rpmIn = function() {\\n    return rpmIn;\\n  };\\n\\n  this.rpmOut = function() {\\n    return rpmOut;\\n  };\\n\\n  this.maxIn = function() {\\n    return maxIn;\\n  };\\n\\n  this.maxOut = function() {\\n    return maxOut;\\n  };\\n\\n  this.latestRpsIn = function() {\\n    return rpmIn[0];\\n  };\\n\\n  this.latestRpsOut = function() {\\n    return rpmOut[0];\\n  };\\n\\n  this.count = function() {\\n    return rpmIn.length;\\n  };\\n}\\n\\nvar stats = new StreamStats();\\n\\nfunction StreamRenderer(stats) {\\n  var self = this;\\n  var width = 0;\\n  var height = 0;\\n\\n  div.attr(\\\"class\\\", \\\"root\\\");\\n  var svg = div.append(\\\"svg\\\");\\n  var chart = div.append(\\\"svg\\\")\\n    .attr(\\\"class\\\", \\\"chart\\\");\\n\\n  chart.append(\\\"marker\\\")\\n    .attr(\\\"id\\\", \\\"circle\\\")\\n    .attr(\\\"markerWidth\\\", \\\"4\\\").attr(\\\"markerHeight\\\", \\\"4\\\")\\n    .attr(\\\"refX\\\", \\\"2\\\").attr(\\\"refY\\\", \\\"2\\\")\\n    .append(\\\"circle\\\")\\n      .attr(\\\"cx\\\", \\\"2\\\").attr(\\\"cy\\\", \\\"2\\\").attr(\\\"r\\\", \\\"2\\\")\\n      .attr(\\\"class\\\", \\\"tick\\\");\\n\\n  var ticks = chart.append(\\\"g\\\");\\n\\n  var chartIn;\\n  var chartOut;\\n  var rowsPerSecondIn;\\n  var rowsPerSecondOut;\\n\\n  var barWidth = 10;\\n  var margin = 30;\\n  var marginLeft = margin + 10;\\n  var remotesCircle = 10;\\n  var remotesMargin = margin;\\n  var remotesHeight = 0;\\n  var chartHeight = 0;\\n  var barsHeight = 0;\\n  var annotationHeight = 20;\\n  var stopped = false;\\n\\n  this.formatRps = function(num) {\\n    return d3.format(\\\",.0f\\\")(num);\\n  };\\n\\n  this.setSize = function(newWidth, newHeight) {\\n    remotesHeight = Math.min(40, newHeight / 3);\\n    chartHeight = newHeight - 2 * remotesHeight - 2 * margin;\\n    barsHeight = chartHeight - 2 * annotationHeight;\\n\\n    svg.attr(\\\"width\\\", newWidth).attr(\\\"height\\\", newHeight);\\n\\n    chart.attr(\\\"width\\\", newWidth).attr(\\\"height\\\", chartHeight);\\n    chart.style(\\\"margin-top\\\", margin + remotesHeight + \\\"px\\\");\\n\\n    chart.style(\\\"display\\\", newHeight < 120 ? \\\"none\\\" : \\\"block\\\");\\n\\n    width = newWidth;\\n    height =  newHeight;\\n  };\\n\\n  this.stop = function() {\\n    stopped = true;\\n  };\\n\\n  this.stopped = function() {\\n    return stopped;\\n  };\\n\\n  this.annotate = function(x, text) {\\n    ticks.append(\\\"line\\\")\\n      .attr(\\\"class\\\", \\\"horizon\\\")\\n      .attr(\\\"x1\\\", x)\\n      .attr(\\\"y1\\\", 10)\\n      .attr(\\\"x2\\\", x)\\n      .attr(\\\"y2\\\", chartHeight / 2)\\n      .attr(\\\"marker-start\\\", \\\"url(#circle)\\\")\\n      .attr(\\\"marker-end\\\", \\\"url(#circle)\\\");\\n\\n    ticks.append(\\\"text\\\")\\n      .attr(\\\"y\\\", 13).attr(\\\"x\\\", x + 4)\\n      .attr(\\\"class\\\", \\\"annotation\\\")\\n      .text(text);\\n  };\\n\\n  var animateClass = \\\"animate\\\";\\n  this.setAnimateClass = function(name) {\\n    animateClass = name;\\n  };\\n\\n  this.update = function() {\\n    chart.attr(\\\"class\\\", \\\"chart\\\");\\n    if (!stopped) {\\n      setTimeout(function() {\\n        chart.attr(\\\"class\\\", \\\"chart \\\" + self.animateClass);\\n      }, 50);\\n    }\\n    else {\\n      chart.attr(\\\"class\\\", \\\"chart stop\\\");\\n    }\\n\\n    rowsPerSecondIn.text(self.formatRps(stats.latestRpsIn()) + \\\" rps\\\");\\n    rowsPerSecondOut.text(self.formatRps(stats.latestRpsOut()) + \\\" rps\\\");\\n\\n    rowsPerSecondIn.style(\\\"display\\\", height < 60 ? \\\"none\\\" : \\\"block\\\");\\n    rowsPerSecondOut.style(\\\"display\\\", height < 60 ? \\\"none\\\" : \\\"block\\\");\\n\\n    var dataIn = chartIn.selectAll(\\\"rect\\\")\\n      .data(stats.rpmIn());\\n\\n    var barsIn = dataIn\\n      .enter()\\n        .append(\\\"rect\\\")\\n      .merge(dataIn)\\n        .attr(\\\"width\\\", barWidth - 2)\\n        .attr(\\\"height\\\", function(d, i) { return barsHeight / 2 * d / stats.maxIn();})\\n        .attr(\\\"x\\\", function(d, i) { return marginLeft + i * barWidth - barWidth; })\\n        .attr(\\\"y\\\", function(d, i) { return chartHeight / 2 - barsHeight / 2 * d / stats.maxIn(); })\\n        .attr(\\\"class\\\", \\\"barIn\\\")\\n        .on(\\\"mouseover\\\", function (d, i) {\\n          rowsPerSecondIn.text(self.formatRps(d) + \\\" rps\\\");\\n          d3.select(this.parentNode).selectAll(\\\"rect\\\").attr(\\\"class\\\", \\\"barIn\\\");\\n          d3.select(this).attr(\\\"class\\\", \\\"barIn selected\\\");\\n        });\\n\\n    var dataOut = chartOut.selectAll(\\\"rect\\\")\\n      .data(stats.rpmOut());\\n\\n    var barsOut = dataOut.\\n      enter()\\n        .append(\\\"rect\\\")\\n      .merge(dataOut)\\n        .attr(\\\"width\\\", barWidth - 2)\\n        .attr(\\\"height\\\", function(d, i) { return barsHeight / 2 * d / stats.maxOut();})\\n        .attr(\\\"x\\\", function(d, i) { return marginLeft + i * barWidth - barWidth; })\\n        .attr(\\\"y\\\", function(d, i) { return chartHeight / 2; })\\n        .attr(\\\"class\\\", \\\"barOut\\\")\\n        .on(\\\"mouseover\\\", function (d, i) {\\n          rowsPerSecondOut.text(self.formatRps(d) + \\\" rps\\\");\\n          d3.select(this.parentNode).selectAll(\\\"rect\\\").attr(\\\"class\\\", \\\"barOut\\\");\\n          d3.select(this).attr(\\\"class\\\", \\\"barOut selected\\\");\\n        });\\n\\n    ticks.selectAll(\\\"*\\\").remove();\\n    ticks.append(\\\"line\\\")\\n      .attr(\\\"class\\\", \\\"horizon\\\")\\n      .attr(\\\"x1\\\", 0)\\n      .attr(\\\"y1\\\", chartHeight / 2)\\n      .attr(\\\"x2\\\", width - margin / 2)\\n      .attr(\\\"y2\\\", chartHeight / 2);\\n\\n    this.annotate(marginLeft + barWidth * (stats.count() - 1) - 4, \\\"Start\\\");\\n    if (stopped) {\\n      this.annotate(marginLeft - barWidth - 8, \\\"End\\\");\\n    }\\n  };\\n\\n  this.render = function() {\\n    svg.selectAll(\\\"g\\\").remove();\\n    svg.selectAll(\\\"text\\\").remove();\\n    chart.selectAll(\\\"rect\\\").remove();\\n\\n    chartIn = chart.append(\\\"g\\\");\\n    chartOut = chart.append(\\\"g\\\");\\n\\n    rpsTextSize = Math.min(10 + height / 40, 20);\\n\\n    rowsPerSecondIn = svg.append(\\\"text\\\");\\n    rowsPerSecondIn.style(\\\"font-size\\\", rpsTextSize + \\\"px\\\");\\n\\n    rowsPerSecondOut = svg.append(\\\"text\\\");\\n    rowsPerSecondOut.style(\\\"font-size\\\", rpsTextSize + \\\"px\\\");\\n\\n    var sourceCircles = svg.selectAll(\\\".source\\\")\\n      .data(data.sources)\\n      .enter()\\n      .append(\\\"g\\\")\\n        .attr(\\\"class\\\", \\\"source\\\")\\n        .attr(\\\"transform\\\", function(d, i) {\\n          return \\\"translate(\\\" + (marginLeft + i * 24) + \\\", \\\" + remotesMargin + \\\")\\\";\\n        })\\n        .append(\\\"circle\\\");\\n\\n    sourceCircles.attr(\\\"cx\\\", \\\"0\\\").attr(\\\"cy\\\", \\\"0\\\").attr(\\\"r\\\", \\\"10\\\")\\n      .attr(\\\"class\\\", function (d, i) {\\n        return (i == data.sources.length - 1) ? \\\"source selected\\\" : \\\"source\\\";\\n      })\\n      .attr(\\\"stroke-width\\\", \\\"2\\\")\\n      .on(\\\"mouseover\\\", function (d, i) {\\n        sourceCircles.attr(\\\"class\\\", \\\"source\\\");\\n        d3.select(this).attr(\\\"class\\\", \\\"source selected\\\");\\n        sourceText.text(d);\\n      });\\n\\n    var sourceText = svg\\n      .append(\\\"text\\\")\\n        .attr(\\\"y\\\", margin + 3).attr(\\\"x\\\", marginLeft + data.sources.length * 24)\\n        .attr(\\\"class\\\", \\\"label\\\")\\n        .text(function(d) { return data.sources[data.sources.length - 1]; });\\n\\n    rowsPerSecondIn\\n      .attr(\\\"y\\\", margin + rpsTextSize + 5).attr(\\\"x\\\", marginLeft + data.sources.length * 24)\\n      .attr(\\\"class\\\", \\\"rps\\\")\\n      .text(self.formatRps(stats.latestRpsIn()) + \\\" rps\\\");\\n\\n    rowsPerSecondIn.append(\\\"title\\\").text(\\\"rows per second\\\");\\n\\n    var sinkCircles = svg.selectAll(\\\".sink\\\")\\n      .data(data.sinks)\\n      .enter()\\n      .append(\\\"g\\\")\\n        .attr(\\\"class\\\", \\\"sink\\\")\\n        .attr(\\\"transform\\\", function(d, i) {\\n          return \\\"translate(\\\" + (marginLeft + i * 24) + \\\",\\\"  + (height - remotesMargin) + \\\")\\\";\\n        })\\n        .append(\\\"circle\\\");\\n\\n    sinkCircles.attr(\\\"cx\\\", \\\"0\\\").attr(\\\"cy\\\", \\\"0\\\").attr(\\\"r\\\", \\\"10\\\")\\n      .attr(\\\"class\\\", function (d, i) {\\n        return (i == data.sinks.length - 1) ? \\\"sink selected\\\" : \\\"sink\\\";\\n      })\\n      .attr(\\\"stroke-width\\\", \\\"2\\\")\\n      .on(\\\"mouseover\\\", function (d, i) {\\n        sinkCircles.attr(\\\"class\\\", \\\"sink\\\");\\n        d3.select(this).attr(\\\"class\\\", \\\"sink selected\\\");\\n        sinkText.text(d);\\n      });\\n\\n    var sinkText = svg\\n      .append(\\\"text\\\")\\n        .attr(\\\"y\\\", height - margin + 3).attr(\\\"x\\\", marginLeft + data.sinks.length * 24)\\n        .attr(\\\"class\\\", \\\"label sinkText\\\")\\n        .text(function(d) { return data.sinks[data.sinks.length - 1]; });\\n\\n    rowsPerSecondOut\\n      .attr(\\\"y\\\", height - margin - 15).attr(\\\"x\\\", marginLeft + data.sinks.length * 24)\\n      .attr(\\\"class\\\", \\\"rps\\\")\\n      .text(self.formatRps(stats.latestRpsOut()) + \\\" rps\\\");\\n\\n    rowsPerSecondOut.append(\\\"title\\\").text(\\\"rows per second\\\");\\n\\n    this.update();\\n  };\\n}\\n\\nvar renderer = new StreamRenderer(stats);\\n\\nr2d3.onRender(function(data, svg, width, height, options) {\\n  renderer.setSize(width, height);\\n  renderer.render();\\n});\\n\\nr2d3.onResize(function(width, height) {\\n  renderer.setSize(width, height);\\n  renderer.render();\\n});\\n\\nfunction debug(msg) {\\n  if (options !== null && \\\"debug\\\" in options) {\\n    console.log(msg);\\n  }\\n}\\n\\nif (options !== null && \\\"demo\\\" in options && options.demo === true) {\\n  setInterval(function() {\\n    var data = {\\n      rps: {\\n        in: Math.random() * 100,\\n        out: Math.random() * 100\\n      }\\n    };\\n\\n    debug(JSON.stringify(data));\\n    stats.add(data.rps);\\n    renderer.update();\\n  }, 1000);\\n}\\nelse if (typeof(Shiny) !== \\\"undefined\\\") {\\n  Shiny.addCustomMessageHandler(\\\"sparklyr_stream_view\\\", function(data) {\\n      debug(JSON.stringify(data));\\n      stats.add(data.rps);\\n      renderer.update();\\n    }\\n  );\\n}\\nelse if (data !== null && \\\"stats\\\" in data) {\\n  var statsIdx = 0;\\n  setInterval(function(data) {\\n    return function() {\\n      if (statsIdx >= data.stats.length) {\\n        var stopped = renderer.stopped();\\n        renderer.stop();\\n        if (!stopped) renderer.update();\\n        return;\\n      }\\n\\n      var d = data.stats[statsIdx];\\n\\n      debug(JSON.stringify(d));\\n      stats.add(d.rps);\\n\\n      renderer.setAnimateClass(\\\"animateFast\\\");\\n      renderer.update();\\n\\n      statsIdx += 1;\\n    };\\n  }(data), 100);\\n}\\n};\",\"style\":\"/* R2D3 Source File:  /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/library/sparklyr/streams/stream.css */\\n.root {\\n  position: absolute;\\n}\\n\\nsvg {\\n  font: 12px sans-serif;\\n  position: absolute;\\n}\\n\\n.label {\\n  fill: #666;\\n}\\n\\n.rps {\\n  fill: #777;\\n  font: 20px sans-serif;\\n}\\n\\n@-webkit-keyframes svgTranslate {\\n    0% {\\n        transform: translateX(0px);\\n    }\\n    100% {\\n        transform: translateX(100px);\\n    }\\n}\\n\\n@-webkit-keyframes svgReset {\\n    0% { transform: translateX(0); }\\n    100% { transform: translateX(0px); }\\n}\\n\\n@keyframes svgTranslate {\\n    0%   { transform: translateX(0px) }\\n    100% { transform: translateX(100px) }\\n}\\n\\n@keyframes svgTranslateFast {\\n    0%   { transform: translateX(0px) }\\n    100% { transform: translateX(1000px) }\\n}\\n\\n.chart {\\n  position: absolute;\\n}\\n\\n.chart.animate {\\n  animation-name: svgTranslate;\\n  animation-duration: 10s;\\n  animation-timing-function: linear;\\n  animation-delay: 0s;\\n}\\n\\n.chart.animate-fast {\\n  animation-name: svgTranslate;\\n  animation-duration: 10s;\\n  animation-timing-function: linear;\\n  animation-delay: 0s;\\n}\\n\\n.chart.stop{\\n  transform: translateX(10px);\\n}\\n\\n.barIn {\\n  fill: #667292;\\n}\\n\\n.barIn.selected {\\n  fill: #263252;\\n}\\n\\n.barOut {\\n  fill: #8d9db6;\\n}\\n\\n.barOut.selected {\\n  fill: #4a5d76;\\n}\\n\\n.source {\\n  fill: #667292;\\n  stroke: none;\\n}\\n\\n.source .selected {\\n  stroke: #667292;\\n}\\n\\n.sink {\\n  fill: #8d9db6;\\n  stroke: none;\\n}\\n\\n.sink .selected {\\n  stroke: #8d9db6;\\n}\\n\\n.tick {\\n  stroke: none;\\n  fill: #CDCDE6;\\n}\\n\\n.horizon {\\n  stroke: #CdCdE6;\\n  stroke-width: 1;\\n  stroke-dasharray: 2,2;\\n}\\n\\n.annotation {\\n  fill: #CdCdE6;\\n}\",\"version\":6,\"theme\":{\"default\":{\"background\":\"#FFFFFF\",\"foreground\":\"#000000\"},\"runtime\":null},\"useShadow\":true},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n```{.r .cell-code}\nstream_stop(stream) \n```\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\n<script src=\"../../../../site_libs/r2d3-render-0.1.0/r2d3-render.js\"></script>\n<script src=\"../../../../site_libs/webcomponents-2.0.0/webcomponents.js\"></script>\n<script src=\"../../../../site_libs/r2d3-binding-0.2.6/r2d3.js\"></script>\n<script src=\"../../../../site_libs/d3v6-6.2.0/d3.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}