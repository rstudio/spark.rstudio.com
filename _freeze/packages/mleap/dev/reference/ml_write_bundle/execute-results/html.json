{
  "hash": "28d8058a6dbb322e6e0a333d919ceec1",
  "result": {
    "markdown": "---\ntitle: \"Export a Spark pipeline for serving\"\nexecute:\n  freeze: true\n---\n\n\n*R/mleap.R*\n\n## ml_write_bundle\n\n## Description\nThis functions serializes a Spark pipeline model into an MLeap bundle. \n\n\n## Usage\n```r\nml_write_bundle(x, sample_input, path, overwrite = FALSE) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| x | A Spark pipeline model object. |\n| sample_input | A sample input Spark DataFrame with the expected schema. |\n| path | Where to save the bundle. |\n| overwrite | Whether to overwrite an existing file, defaults to `FALSE`. |\n\n\n\n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(mleap)\nlibrary(sparklyr) \nsc <- spark_connect(master = \"local\") \nmtcars_tbl <- sdf_copy_to(sc, mtcars, overwrite = TRUE) \npipeline <- ml_pipeline(sc) %>% \n  ft_binarizer(\"hp\", \"big_hp\", threshold = 100) %>% \n  ft_vector_assembler(c(\"big_hp\", \"wt\", \"qsec\"), \"features\") %>% \n  ml_gbt_regressor(label_col = \"mpg\") \npipeline_model <- ml_fit(pipeline, mtcars_tbl) \nmodel_path <- file.path(tempdir(), \"mtcars_model.zip\") \nml_write_bundle(pipeline_model,  \n                mtcars_tbl, \n                model_path, \n                overwrite = TRUE) \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}