{
  "hash": "b4cbd743c7a530a67b85d4fc7c00f37e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Starts and stops Spark Connect locally\"\nexecute:\n  freeze: true\n---\n\n\n\n\n*R/start-stop-service.R*\n\n## spark_connect_service_start\n\n## Description\n Starts and stops Spark Connect locally \n\n\n## Usage\n```r\n \nspark_connect_service_start( \n  version = \"3.5\", \n  scala_version = \"2.12\", \n  include_args = TRUE, \n  ... \n) \n \nspark_connect_service_stop(version = \"3.5\", ...) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| version | Spark version to use (3.4 or above) |\n| scala_version | Acceptable Scala version of packages to be loaded |\n| include_args | Flag that indicates whether to add the additional arguments to the command that starts the service. At this time, only the 'packages' argument is submitted. |\n| ... | Optional arguments; currently unused |\n\n\n\n## Value\n It returns messages to the console with the status of starting, and stopping the local Spark Connect service. \n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}