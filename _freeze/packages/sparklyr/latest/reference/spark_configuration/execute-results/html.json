{
  "hash": "97caa745159f669ff0f1627134b44a9a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Runtime configuration interface for the Spark Session\"\nexecute:\n  freeze: true\n---\n\n\n\n*R/spark_context_config.R*\n\n## spark_session_config\n\n## Description\n Retrieves or sets runtime configuration entries for the Spark Session \n\n\n## Usage\n```r\n \nspark_session_config(sc, config = TRUE, value = NULL) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| sc | A `spark_connection`. |\n| config | The configuration entry name(s) (e.g., `\"spark.sql.shuffle.partitions\"`). Defaults to `NULL` to retrieve all configuration entries. |\n| value | The configuration value to be set. Defaults to `NULL` to retrieve configuration entries. |\n\n\n\n\n\n\n## See Also\n Other Spark runtime configuration:  `spark_adaptive_query_execution()`, `spark_advisory_shuffle_partition_size()`, `spark_auto_broadcast_join_threshold()`, `spark_coalesce_initial_num_partitions()`, `spark_coalesce_min_num_partitions()`, `spark_coalesce_shuffle_partitions()` \n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}