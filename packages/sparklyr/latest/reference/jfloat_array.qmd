---
title: "Instantiate an Array[Float]."
execute:
  freeze: true
---

```{r, eval=ecodown::examples_not_run()}
#| include: false
options("pillar.width" = 60)
library(sparklyr) 
library(dplyr)
```

*R/utils.R*

## jfloat_array

## Description
Instantiate an `Array[Float]` object with the value specified. NOTE: this method is useful when one has to invoke a Java/Scala method requiring an `Array[Float]` as one of its parameters. 


## Usage
```r
jfloat_array(sc, x) 
```

## Arguments
|Arguments|Description|
|---|---|
| sc | A `spark_connection`. |
| x | A numeric vector in R. |





## Examples
```{r, eval=ecodown::examples_run()}
library(sparklyr)
sc <- spark_connect(master = "spark://HOST:PORT") 
jflt_arr <- jfloat_array(sc, c(-1.23e-8, 0, -1.23e-8)) 
# jflt_arr is now a reference an array of java.lang.Float 
```



```{r, eval=ecodown::examples_not_run()}
#| include: false
spark_disconnect_all()
```
