{
  "hash": "3e27fe64ae44965684565cc51f043f3b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Collect Spark data serialized in RDS format into R\"\nexecute:\n  freeze: true\n---\n\n\n\n*R/sdf_wrapper.R*\n\n## collect_from_rds\n\n## Description\n Deserialize Spark data that is serialized using `spark_write_rds()` into a R dataframe. \n\n\n## Usage\n```r\n \ncollect_from_rds(path) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| path | Path to a local RDS file that is produced by `spark_write_rds()` (RDS files stored in HDFS will need to be downloaded to local filesystem first (e.g., by running `hadoop fs -copyToLocal ...` or similar) |\n\n\n\n\n\n\n## See Also\n Other Spark serialization routines:  `spark_insert_table()`, `spark_load_table()`, `spark_read()`, `spark_read_avro()`, `spark_read_binary()`, `spark_read_csv()`, `spark_read_delta()`, `spark_read_image()`, `spark_read_jdbc()`, `spark_read_json()`, `spark_read_libsvm()`, `spark_read_orc()`, `spark_read_parquet()`, `spark_read_source()`, `spark_read_table()`, `spark_read_text()`, `spark_save_table()`, `spark_write_avro()`, `spark_write_csv()`, `spark_write_delta()`, `spark_write_jdbc()`, `spark_write_json()`, `spark_write_orc()`, `spark_write_parquet()`, `spark_write_source()`, `spark_write_table()`, `spark_write_text()` \n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}