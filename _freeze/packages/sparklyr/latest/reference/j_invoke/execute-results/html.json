{
  "hash": "6326225d85195db5afc5b276150300e4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Invoke a Java function.\"\nexecute:\n  freeze: true\n---\n\n\n\n*R/spark_invoke.R*\n\n## j_invoke\n\n## Description\n Invoke a Java function and force return value of the call to be retrieved as a Java object reference. \n\n\n## Usage\n```r\n \nj_invoke(jobj, method, ...) \n \nj_invoke_static(sc, class, method, ...) \n \nj_invoke_new(sc, class, ...) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| jobj | An `R` object acting as a Java object reference (typically, a `spark_jobj`). |\n| method | The name of the method to be invoked. |\n| ... | Optional arguments, currently unused. |\n| sc | A `spark_connection`. |\n| class | The name of the Java class whose methods should be invoked. |\n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}