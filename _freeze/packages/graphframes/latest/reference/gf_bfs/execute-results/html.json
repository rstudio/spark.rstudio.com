{
  "hash": "a92d5134b3b2030cce2d7f1450af5f8d",
  "result": {
    "markdown": "---\ntitle: \"Breadth-first search (BFS)\"\nexecute:\n  freeze: true\n---\n\n\n*R/gf_bfs.R*\n\n## gf_bfs\n\n## Description\nBreadth-first search (BFS) \n\n\n## Usage\n```r\ngf_bfs(x, from_expr, to_expr, max_path_length = 10, edge_filter = NULL, \n  ...) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| x | An object coercable to a GraphFrame (typically, a `gf_graphframe`). |\n| from_expr | Spark SQL expression specifying valid starting vertices for the BFS. |\n| to_expr | Spark SQL expression specifying valid target vertices for the BFS. |\n| max_path_length | Limit on the length of paths. |\n| edge_filter | Spark SQL expression specifying edges which may be used in the search. |\n| ... | Optional arguments, currently not used. |\n\n\n\n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(graphframes)\ng <- gf_friends(sc) \ngf_bfs(g, from_expr = \"name = 'Esther'\", to_expr = \"age < 32\") \n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}