{
  "hash": "6b48d87ba0b427147647e5a636ae522e",
  "result": {
    "markdown": "---\ntitle: \"Spark ML - Clustering Evaluator\"\nexecute:\n  freeze: true\n---\n\n\n\n\n*R/ml_evaluation_clustering.R*\n\n## ml_clustering_evaluator\n\n## Description\nEvaluator for clustering results. The metric computes the Silhouette measure using the squared   Euclidean distance. The Silhouette is a measure for the validation of the consistency    within clusters. It ranges between 1 and -1, where a value close to 1 means that the     points in a cluster are close to the other points in the same cluster and far from the     points of the other clusters. \n\n\n## Usage\n```r\nml_clustering_evaluator( \n  x, \n  features_col = \"features\", \n  prediction_col = \"prediction\", \n  metric_name = \"silhouette\", \n  uid = random_string(\"clustering_evaluator_\"), \n  ... \n) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| x | A `spark_connection` object or a `tbl_spark` containing label and prediction columns. The latter should be the output of `sdf_predict`. |\n| features_col | Name of features column. |\n| prediction_col | Name of the prediction column. |\n| metric_name | The performance metric. Currently supports \"silhouette\". |\n| uid | A character string used to uniquely identify the ML estimator. |\n| ... | Optional arguments; currently unused. |\n\n\n\n## Value\nThe calculated performance metric \n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sparklyr)\nsc <- spark_connect(master = \"local\") \niris_tbl <- sdf_copy_to(sc, iris, name = \"iris_tbl\", overwrite = TRUE) \npartitions <- iris_tbl %>% \n  sdf_random_split(training = 0.7, test = 0.3, seed = 1111) \niris_training <- partitions$training \niris_test <- partitions$test \nformula <- Species ~ . \n# Train the models \nkmeans_model <- ml_kmeans(iris_training, formula = formula) \nb_kmeans_model <- ml_bisecting_kmeans(iris_training, formula = formula) \ngmm_model <- ml_gaussian_mixture(iris_training, formula = formula) \n# Predict \npred_kmeans <- ml_predict(kmeans_model, iris_test) \npred_b_kmeans <- ml_predict(b_kmeans_model, iris_test) \npred_gmm <- ml_predict(gmm_model, iris_test) \n# Evaluate \nml_clustering_evaluator(pred_kmeans) \n#> [1] 0.8736088\nml_clustering_evaluator(pred_b_kmeans) \n#> [1] 0.4433206\nml_clustering_evaluator(pred_gmm) \n#> [1] 0.8677525\n```\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}