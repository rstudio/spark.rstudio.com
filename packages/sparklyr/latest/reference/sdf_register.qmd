---
title: "Register a Spark DataFrame"
execute:
  freeze: true
---

*R/sdf_interface.R*

## sdf_register

## Description
Registers a Spark DataFrame (giving it a table name for the Spark SQL context), and returns a `tbl_spark`. 


## Usage
```r
sdf_register(x, name = NULL) 
```

## Arguments
|Arguments|Description|
|---|---|
| x | A Spark DataFrame. |
| name | A name to assign this table. |


## Section

## Transforming Spark DataFrames

The family of functions prefixed with `sdf_` generally access the Scala Spark DataFrame API directly, as opposed to the `dplyr` interface which uses Spark SQL. These functions will 'force' any pending SQL in a `dplyr` pipeline, such that the resulting `tbl_spark` object returned will no longer have the attached 'lazy' SQL operations. Note that the underlying Spark DataFrame **does** execute its operations lazily, so that even though the pending set of operations (currently) are not exposed at the `R` level, these operations will only be executed when you explicitly `collect()` the table. 




## See Also
Other Spark data frames:  `sdf_copy_to()`, `sdf_distinct()`, `sdf_random_split()`, `sdf_sample()`, `sdf_sort()`, `sdf_weighted_sample()`

