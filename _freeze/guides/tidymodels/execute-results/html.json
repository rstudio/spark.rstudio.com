{
  "hash": "93ee75248db761a6bef1eee89ad1f338",
  "result": {
    "markdown": "---\ntitle: \"`tidymodels` and Spark\"\nexecute:\n  eval: true\n  freeze: true\n---\n\n\n\n## Model preparation with `parsnip`\n\n`parsnip` provides a common interface to models.  This enables us to run the same model against multiple engines.  With one change, we can easily run a Random Forest model against the `randomForest`, `ranger` and `sparklyr` packages. `parsnip` contains translation for each of these packages, so we do not have to remember, or find out, how to setup each argument in the respective package.\n\n### List of supported models\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"giwtbwlqix\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#giwtbwlqix .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#giwtbwlqix .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#giwtbwlqix .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#giwtbwlqix .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#giwtbwlqix .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#giwtbwlqix .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#giwtbwlqix .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#giwtbwlqix .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#giwtbwlqix .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#giwtbwlqix .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#giwtbwlqix .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#giwtbwlqix .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#giwtbwlqix .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#giwtbwlqix .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#giwtbwlqix .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#giwtbwlqix .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#giwtbwlqix .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#giwtbwlqix .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#giwtbwlqix .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#giwtbwlqix .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#giwtbwlqix .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#giwtbwlqix .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#giwtbwlqix .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#giwtbwlqix .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#giwtbwlqix .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#giwtbwlqix .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#giwtbwlqix .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#giwtbwlqix .gt_left {\n  text-align: left;\n}\n\n#giwtbwlqix .gt_center {\n  text-align: center;\n}\n\n#giwtbwlqix .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#giwtbwlqix .gt_font_normal {\n  font-weight: normal;\n}\n\n#giwtbwlqix .gt_font_bold {\n  font-weight: bold;\n}\n\n#giwtbwlqix .gt_font_italic {\n  font-style: italic;\n}\n\n#giwtbwlqix .gt_super {\n  font-size: 65%;\n}\n\n#giwtbwlqix .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 65%;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\"><strong>Model</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\"><strong><code>parsnip</code> function</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\"><strong>Classification</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\"><strong>Regression</strong></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td class=\"gt_row gt_left\">Boosted trees</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>boost_tree()</code></p>\n</div></td>\n<td class=\"gt_row gt_left\">Yes</td>\n<td class=\"gt_row gt_left\">Yes</td></tr>\n    <tr><td class=\"gt_row gt_left\">Decision trees</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>decision_tree()</code></p>\n</div></td>\n<td class=\"gt_row gt_left\">Yes</td>\n<td class=\"gt_row gt_left\">Yes</td></tr>\n    <tr><td class=\"gt_row gt_left\">Linear regression</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>linear_reg()</code></p>\n</div></td>\n<td class=\"gt_row gt_left\"></td>\n<td class=\"gt_row gt_left\">Yes</td></tr>\n    <tr><td class=\"gt_row gt_left\">Logistic regression</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>logistic_reg()</code></p>\n</div></td>\n<td class=\"gt_row gt_left\">Yes</td>\n<td class=\"gt_row gt_left\"></td></tr>\n    <tr><td class=\"gt_row gt_left\">Multinomial regression</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>multinom_reg()</code></p>\n</div></td>\n<td class=\"gt_row gt_left\">Yes</td>\n<td class=\"gt_row gt_left\"></td></tr>\n    <tr><td class=\"gt_row gt_left\">Random forest</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>rand_forest()</code></p>\n</div></td>\n<td class=\"gt_row gt_left\">Yes</td>\n<td class=\"gt_row gt_left\">Yes</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n### Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sparklyr)\nlibrary(dplyr)\n\nsc <- spark_connect(\"local\")\n\nspark_mtcars <- copy_to(sc, mtcars)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(parsnip)\n\nmtcars_model <- linear_reg() %>%\n  set_engine(\"spark\") %>%\n  fit(mpg ~ ., data = spark_mtcars)\n\nmtcars_model\n```\n\n::: {.cell-output-stdout}\n```\nparsnip model object\n\nFit time:  4.4s \nFormula: mpg ~ .\n\nCoefficients:\n(Intercept)         cyl        disp          hp        drat          wt \n12.30337416 -0.11144048  0.01333524 -0.02148212  0.78711097 -3.71530393 \n       qsec          vs          am        gear        carb \n 0.82104075  0.31776281  2.52022689  0.65541302 -0.19941925 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlinear_reg() %>%\n  set_engine(\"spark\") %>%\n  translate()\n```\n\n::: {.cell-output-stdout}\n```\nLinear Regression Model Specification (regression)\n\nComputational engine: spark \n\nModel fit template:\nsparklyr::ml_linear_regression(x = missing_arg(), formula = missing_arg(), \n    weight_col = missing_arg())\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspark_iris <- copy_to(sc, iris)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris_model <- rand_forest(trees = 100) %>% \n  set_mode(\"classification\") %>% \n  set_engine(\"spark\") %>% \n  fit(Species ~., data = spark_iris)\n\niris_model\n```\n\n::: {.cell-output-stdout}\n```\nparsnip model object\n\nFit time:  5.7s \nFormula: Species ~ .\n\nRandomForestClassificationModel: uid=random_forest__49e75408_71b8_410c_9428_f5705eab49c7, numTrees=100, numClasses=3, numFeatures=4\n```\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrand_forest(trees = 100) %>% \n  set_mode(\"classification\") %>% \n  set_engine(\"spark\") %>% \n  translate()\n```\n\n::: {.cell-output-stdout}\n```\nRandom Forest Model Specification (classification)\n\nMain Arguments:\n  trees = 100\n\nComputational engine: spark \n\nModel fit template:\nsparklyr::ml_random_forest(x = missing_arg(), formula = missing_arg(), \n    type = \"classification\", num_trees = 100, seed = sample.int(10^5, \n        1))\n```\n:::\n:::\n### Why use? \n\nThere are cases when we would like to test model parameters before fitting over the entire big data set. Using this approach allows us to first try out parameters (arguments) with a smaller data set that lives in R memory. When we are ready to run in Spark, we just change the `engine` and the `data` arguments.\n\nWe can go from this:\n\n::: {.cell}\n\n```{.r .cell-code}\nlocal_model <- rand_forest(trees = 100) %>% \n  set_mode(\"classification\") %>% \n  set_engine(\"ranger\") %>% \n  fit(Species ~., data = iris)\n```\n:::\n\nTo this, by switching `set_engine()` to `spark`, and `data` to `spark_iris`: \n\n::: {.cell}\n\n```{.r .cell-code}\nlocal_model <- rand_forest(trees = 100) %>% \n  set_mode(\"classification\") %>% \n  set_engine(\"spark\") %>% \n  fit(Species ~., data = spark_iris)\n```\n:::\n\n## Model results with `broom`\n\nThe `broom` package offers great ways to get summarized information about a \nfitted model. `sparklyr` offers integration for `parsnip` based, \n\n- `tidy()` - Summarizes information about the components of a model. A model component might be a single term in a regression, a single hypothesis, a cluster, or a class. \n\n- `glance()` - Returns a `tibble::tibble()` with exactly one row of model summaries. The summaries are typically goodness of fit measures, p-values for hypothesis tests on residuals, or model convergence information.\n\n\n\n### List of supported models\n\nCurrently, 20 Spark models support `broom` via `sparklyr`.  Here is the current list of models and the corresponding `sparklyr` function:\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"vfgqofpajr\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#vfgqofpajr .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#vfgqofpajr .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vfgqofpajr .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#vfgqofpajr .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#vfgqofpajr .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vfgqofpajr .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#vfgqofpajr .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#vfgqofpajr .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#vfgqofpajr .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#vfgqofpajr .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#vfgqofpajr .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#vfgqofpajr .gt_group_heading {\n  padding: 8px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vfgqofpajr .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#vfgqofpajr .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#vfgqofpajr .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#vfgqofpajr .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#vfgqofpajr .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 12px;\n}\n\n#vfgqofpajr .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vfgqofpajr .gt_first_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n}\n\n#vfgqofpajr .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#vfgqofpajr .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#vfgqofpajr .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#vfgqofpajr .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#vfgqofpajr .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vfgqofpajr .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding: 4px;\n}\n\n#vfgqofpajr .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#vfgqofpajr .gt_sourcenote {\n  font-size: 90%;\n  padding: 4px;\n}\n\n#vfgqofpajr .gt_left {\n  text-align: left;\n}\n\n#vfgqofpajr .gt_center {\n  text-align: center;\n}\n\n#vfgqofpajr .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#vfgqofpajr .gt_font_normal {\n  font-weight: normal;\n}\n\n#vfgqofpajr .gt_font_bold {\n  font-weight: bold;\n}\n\n#vfgqofpajr .gt_font_italic {\n  font-style: italic;\n}\n\n#vfgqofpajr .gt_super {\n  font-size: 65%;\n}\n\n#vfgqofpajr .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 65%;\n}\n</style>\n<table class=\"gt_table\">\n  <thead class=\"gt_header\">\n    <tr>\n      <th colspan=\"2\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style><strong>Models that support <code>glance()</code>, <code>tidy()</code>, and <code>augment()</code></strong></th>\n    </tr>\n    \n  </thead>\n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\"><strong>Model</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\"><strong>Function</strong></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td class=\"gt_row gt_left\"> ALS</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_als()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Bisecting K-Means Clustering</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_bisecting_kmeans()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Decision Trees</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_decision_tree()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Gaussian Mixture clustering.</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_gaussian_mixture()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Generalized Linear Regression</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_generalized_linear_regression()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Gradient Boosted Trees</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_gradient_boosted_trees()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Isotonic Regression</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_isotonic_regression()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> K-Means Clustering</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_kmeans()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Latent Dirichlet Allocation</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_lda()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Linear Regression</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_linear_regression()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> LinearSVC</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_linear_svc()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Logistic Regression</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_logistic_regression()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Multilayer Perceptron</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_multilayer_perceptron()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Naive-Bayes</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_naive_bayes()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Random Forest</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_random_forest()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\"> Survival Regression</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_aft_survival_regression()</code></p>\n</div></td></tr>\n    <tr><td class=\"gt_row gt_left\">PCA (Estimator)</td>\n<td class=\"gt_row gt_left\"><div class='gt_from_md'><p><code>ml_pca()</code></p>\n</div></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n### Example\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\n```\n:::\n\n\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\ntidy(mtcars_model)\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 11 × 5\n   term        estimate std.error statistic p.value\n   <chr>          <dbl>     <dbl>     <dbl>   <dbl>\n 1 (Intercept)  12.3      18.7        0.657  0.518 \n 2 cyl          -0.111     1.05      -0.107  0.916 \n 3 disp          0.0133    0.0179     0.747  0.463 \n 4 hp           -0.0215    0.0218    -0.987  0.335 \n 5 drat          0.787     1.64       0.481  0.635 \n 6 wt           -3.72      1.89      -1.96   0.0633\n 7 qsec          0.821     0.731      1.12   0.274 \n 8 vs            0.318     2.10       0.151  0.881 \n 9 am            2.52      2.06       1.23   0.234 \n10 gear          0.655     1.49       0.439  0.665 \n11 carb         -0.199     0.829     -0.241  0.812 \n```\n:::\n:::\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\nglance(mtcars_model)\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 1 × 5\n  explained.varian… mean.absolute.e… mean.squared.er… r.squared root.mean.squar…\n              <dbl>            <dbl>            <dbl>     <dbl>            <dbl>\n1              30.6             1.72             4.61     0.869             2.15\n```\n:::\n:::\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\ntidy(iris_model)\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 4 × 2\n  feature      importance\n  <chr>             <dbl>\n1 Petal_Length     0.449 \n2 Petal_Width      0.435 \n3 Sepal_Length     0.102 \n4 Sepal_Width      0.0139\n```\n:::\n:::\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\nglance(iris_model)\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 1 × 5\n  num_trees total_num_nodes max_depth impurity subsampling_rate\n      <int>           <int>     <int> <chr>               <dbl>\n1       100            1428         5 gini                    1\n```\n:::\n:::\n## Correlations using `corrr`\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(corrr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspark_mtcars %>% \n  correlate()\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 11 × 12\n   term     mpg    cyl   disp     hp    drat     wt    qsec     vs      am\n   <chr>  <dbl>  <dbl>  <dbl>  <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1 mpg   NA     -0.852 -0.848 -0.776  0.681  -0.868  0.419   0.664  0.600 \n 2 cyl   -0.852 NA      0.902  0.832 -0.700   0.782 -0.591  -0.811 -0.523 \n 3 disp  -0.848  0.902 NA      0.791 -0.710   0.888 -0.434  -0.710 -0.591 \n 4 hp    -0.776  0.832  0.791 NA     -0.449   0.659 -0.708  -0.723 -0.243 \n 5 drat   0.681 -0.700 -0.710 -0.449 NA      -0.712  0.0912  0.440  0.713 \n 6 wt    -0.868  0.782  0.888  0.659 -0.712  NA     -0.175  -0.555 -0.692 \n 7 qsec   0.419 -0.591 -0.434 -0.708  0.0912 -0.175 NA       0.745 -0.230 \n 8 vs     0.664 -0.811 -0.710 -0.723  0.440  -0.555  0.745  NA      0.168 \n 9 am     0.600 -0.523 -0.591 -0.243  0.713  -0.692 -0.230   0.168 NA     \n10 gear   0.480 -0.493 -0.556 -0.126  0.700  -0.583 -0.213   0.206  0.794 \n11 carb  -0.551  0.527  0.395  0.750 -0.0908  0.428 -0.656  -0.570  0.0575\n# … with 2 more variables: gear <dbl>, carb <dbl>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspark_mtcars %>% \n  correlate() %>% \n  rplot()\n```\n\n::: {.cell-output-display}\n![](tidymodels_files/figure-html/unnamed-chunk-44-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "tidymodels_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}