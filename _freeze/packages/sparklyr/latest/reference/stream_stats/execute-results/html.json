{
  "hash": "7d32de3bd1d7bade0ed9abcaf3af9f8f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Stream Statistics\"\nexecute:\n  freeze: true\n---\n\n\n\n*R/stream_view.R*\n\n## stream_stats\n\n## Description\n Collects streaming statistics, usually, to be used with `stream_render()` to render streaming statistics. \n\n\n## Usage\n```r\n \nstream_stats(stream, stats = list()) \n```\n\n## Arguments\n|Arguments|Description|\n|---|---|\n| stream | The stream to collect statistics from. |\n| stats | An optional stats object generated using `stream_stats()`. |\n\n\n\n## Value\n A stats object containing streaming statistics that can be passed   back to the `stats` parameter to continue aggregating streaming stats. \n\n\n## Examples\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sparklyr)\n \nsc <- spark_connect(master = \"local\") \nsdf_len(sc, 10) %>% \n  spark_write_parquet(path = \"parquet-in\") \n \nstream <- stream_read_parquet(sc, \"parquet-in\") %>% \n  stream_write_parquet(\"parquet-out\") \n \nstream_stats(stream) \n \n \n```\n:::\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}